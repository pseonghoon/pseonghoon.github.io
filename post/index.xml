<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on PSH&#39;s Blog</title>
    <link>https://pseonghoon.github.io/post/</link>
    <description>Recent content in Posts on PSH&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2020</copyright>
    <lastBuildDate>Sun, 11 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://pseonghoon.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes에서 NFS(EFS) 사용하기</title>
      <link>https://pseonghoon.github.io/post/k8s-and-nfs/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pseonghoon.github.io/post/k8s-and-nfs/</guid>
      <description>&lt;p&gt;Pod에서 NFS를 volume으로 사용하기 위해 &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/volumes/#nfs&#34;&gt;공식 문서&lt;/a&gt;의 &lt;a href=&#34;https://github.com/kubernetes/examples/blob/bbe33f4997d781cffe9e310281e5ab4da07a07d5/staging/volumes/nfs/&#34;&gt;예제&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;를 참고하는 경우가 많을 것이다. 그런데 실무에서 활용하려면 그 내용을 보완 설명할 필요가 있어서 이 포스트를 작성했다. AWS EFS를 NFS 서버로 사용할 때 편리하게 쓸 수 있는 &lt;strong&gt;efs-provisioner&lt;/strong&gt; 도 간략하게 소개하려고 한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>코드로 인프라 관리하기 (Games on AWS 발표 자료)</title>
      <link>https://pseonghoon.github.io/post/infrastructure-as-code/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pseonghoon.github.io/post/infrastructure-as-code/</guid>
      <description>&lt;p&gt;&lt;code&gt;링크&lt;/code&gt;: &lt;a href=&#34;https://drive.google.com/file/d/1Bsc5hic_p8nNfGTSa8Dz4UXx49PVFOd4/view?usp=sharing&#34;&gt;코드로 인프라 관리하기 (ppt)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Games on AWS 2019에서 발표한 자료다. 발표는 청중 평가에서 가장 좋은 점수를 얻었다.
Infrastructure as Code, 더 나아가 자동화를 통해 무엇을 얻을 수 있는지, 잘 정착되게 하려면 어떤 것을 신경써야 하는지를 정리했다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>L4 DSR 에서 arp_ignore, arp_announce 설정 정확히 이해하기</title>
      <link>https://pseonghoon.github.io/post/linux-parameters-for-l4-dsr/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pseonghoon.github.io/post/linux-parameters-for-l4-dsr/</guid>
      <description>&lt;p&gt;on-premise 환경에서 L4 로드 밸런서를 DSR(Direct Server Return) 모드로 구성할 때, 리눅스 서버의 kernel parameter 중 arp_ignore, arp_announce를 적절히 설정해야 한다.
이 포스트에서 이 parameter들에 대해 잘못 알려진 정보를 바로잡고, 정확한 의미를 정리했다. ARP의 동작 방식에 대해 더 깊이 이해하는 데도 도움이 될 것이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>다시 생각하는 오라클 데이터베이스 운영</title>
      <link>https://pseonghoon.github.io/post/oracle-myth/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pseonghoon.github.io/post/oracle-myth/</guid>
      <description>&lt;p&gt;DBA는 보수적이라는 인식이 흔히 있다. 새로운 시도를 하다가 큰 문제가 발생할 수 있어서 기존 방식을 변경하기가 쉽지 않기 때문이다. 그래서 익숙한 것이 후임자에게 이어지는 것이 반복되고 나중엔 이유는 모르지만 어쨌든 기존 방식을 유지하게 된다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
